<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
<html>
    <style type = "text/css">
    <!--
        body, td {
            margin:0px;
            color:#333;
        }

        body {
            /*  background-image: url(../images/bgTop.gif); */
            background-repeat: repeat-x;
            background-position: left top;
            font-size: 75%;
            font-family: 'Arial', 'Helvetica', sans-serif;
            background-color: #fff;
            width:95%;
        }

        th {
            text-align: left;
            font-weight: bold;
            white-space: nowrap;
        }

        form {
            margin:0px;
            padding:0px;
        }

        h1, h2, h3, h4, h5, h6 {
            font-family: 'Verdana', 'Geneva', sans-serif;
            font-size: 100%;
            margin:0px;
            display:inline;
        }

        img { border:0; }

        .opportunity .pageTitleIcon {
            background-image: url(/img/icon/opportunities32.png);
            width:32px;
            height:32px;
        }

        .opportunity .secondaryPalette {
            background-color: #E5C130;
            border-color: #E5C130;
        }

        .bPageTitle {
            margin-bottom:15px;
        }
        .bPageTitle .ptBody {
            padding-top: 5px;
            width:100%;
            overflow: hidden;
        }
        .bPageTitle h1, .bPageTitle h2{
            color:#FFF;
            display: block;
        }

        .bPageTitle .ptBody .content {
            color:#fff;
            display: inline; /* IE double-margin float fix */
            float: left;
            width: 40.0%;
            vertical-align: middle;
            position: relative;
            padding-left: 42px;
        }
        .bPageTitle .ptBody .pageType {
            font-size: 91%;
            color:#fff;
        }
        .bPageTitle .ptBody .pageDescription {
            font-size: 109%;
            color:#fff;
            font-weight:bold;
        }

        /* RPC: Made less specific so these classes can be used in FilterEditPage */
        .bPageBlock .labelCol{
            padding:2px 10px 2px 2px;
            text-align:right;
            font-size: 91%;
            font-weight: bold;
            color:#333;
        }

        /* this should be a not-very specific case so that it doesn't override custom tab pages */
        .ptBody {
            background-color: #8e0554;
        }

        .pageTitleIcon {
            position: absolute;
            left: 5px;
            width: 32px;
        }

        /* Colons after titles in Classic mode */
        .titleSeparatingColon {
            display: none;
        }

        .bPageBlock {
            border-top:7px solid #8e0554;
            margin-bottom:17px;
            background-color:#8e0554;
        /* background-image: url(/img/bgPageBlockLeft.gif); */
            background-repeat: no-repeat;
            background-position: left bottom;
            padding-bottom:9px;
            clear: both;
        }

        .bPageBlock .pbBody {
            margin-right:2px;
            padding:6px 20px 0 20px;
            background-color:#F3F3EC;
        }

        .bPageBlock .list {
            width:100%;
        }
        /* Related List text formatting */
        .list .headerRow th {
            border-bottom: 2px solid #CCC;
            white-space: nowrap;
        }

        /* polcari: I dropped the .bPageBlock to make this less specific in in hopes of fixing some problems w/ font color on the custom-tab picker page.
        Let me know if it causes problems & i'll devise a better workaround */
        .list td,
        .list th {
            padding:4px 2px 4px 5px;
            color:#333;
            border-bottom:1px solid #E3DEB8;
        }
        .btn, .button {
            font-family: 'Verdana', 'Geneva', sans-serif;
            background-image:  url("/img/bgButton.gif");
            background-repeat: repeat-x;
            background-position: left top;
            border-right:1px solid #5C5D61;
            border-bottom:1px solid #5C5D61;
            border-top:none;
            border-left:none;
            font-size: 80%;
            color:#FFFFFF;
            padding:1px 3px 1px 3px;
            cursor:pointer;
            font-weight:bold;
            display:inline;
        }
    -->
    </style>
    <script src="/soap/ajax/12.0/connection.js" type="text/javascript">
    </script>
    <script type="text/javascript">
    function build(){

        //変数定義
        var CompanyKeiyakuNo__c_Id,ret,ret2,sObject,sObject2,table,tbody,tr,td,elem;
        var date = new Date();
        var year = date.getFullYear().toString();
        var month = (date.getMonth() + 1).toString();
        var day = date.getDate().toString();
        if (month <= 9) {
            month = "0" + month;
        }
        if (day <= 9) {
            day = "0" + day;
        }

        //Id取得
        CompanyKeiyakuNo__c_Id = "{!ContractInfo__c.Id}";

        try{

            //query実行(会員情報）
            ret = sforce.connection.query("Select Id,MemberNo__c,Name,OtaName__c,ShokenNo__c,OtaInsuranceShiki__c,OtaInsuranceShuki__c,KinmuCompany__r.Name From MemberInfo__c Where  CompanyKeiyakuNo__c = '" + CompanyKeiyakuNo__c_Id + "' And (TaikaiDate__c=null or TaikaiDate__c>=" + year + "-" + month + "-" + day + ") Order by KinmuCompany__r.Name,MemberNo__c");
            if(ret.size == 0){
                alert("対象の会員が存在しません");
                window.top.location.href = "/{!ContractInfo__c.Id}";
            }else{
                document.getElementById("body1").style.cssText = "";
            }
            //データ取得
            sObjects = ret.getArray("records");
            //<table>取得
            table = document.getElementById("table1");
            //前の<tbody>が存在したら削除
            tbody = document.getElementById("tbody1");
            if(tbody){
                table.removeChild(tbody);
            }
            //<tbody>生成
            tbody = document.createElement("tbody");
            tbody.id = "tbody1";
            //画面設定
            var index = 0;
            for(i=0;i<sObjects.length;i++){
                //<tr>行作成
                tr = document.createElement("tr");
                tr.id = "member" + i;
                //作成した行を<tbody>へ追加
                tbody.appendChild(maketd(tr,sObjects[i]));
                //作成した<tbody>を<table>へ反映
                table.appendChild(tbody);
                //query実行(会員家族情報)
                ret2 = sforce.connection.query("Select Id,MemberNo__c,Name,OtaName__c,ShokenNo__c,OtaInsuranceShiki__c,OtaInsuranceShuki__c From FamilyInfo__c where MemberShimei__c = '" + sObjects[i].Id + "' And (TaikaiDate__c=null or TaikaiDate__c>=" + year + "-" + month + "-" + day + ") Order by MemberNo__c");
                sObjects2 = ret2.getArray("records");
                for(j=0;j<sObjects2.length;j++){
                    //家族情報の<tr>行作成
                    tr = document.createElement("tr");
                    tr.id = "family" + index;
                    //作成した行を<tbody>へ追加
                    tbody.appendChild(maketd(tr,sObjects2[j]));
                    //作成した<tbody>を<table>へ反映
                    table.appendChild(tbody);
                    index++;
                }
                //ボタン有効化
                document.getElementById("btnUpdate").setAttribute("disabled",false);
            }
        }catch(e){
            alert(e);
            return;
        }
    }

    function checkInput(){
        //変数定義
        var rs,tds,cells,blnError,blnError1,blnError2,blnShiki,blnShuki,OtaInsuranceShiki__c,OtaInsuranceShuki__c,OtaShiki,OtaShuki;
        blnError = false;
        blnError1 = false;
        blnError2 = false;
        trs = document.getElementById("tbody1").getElementsByTagName("tr");
        for(i=0;i<trs.length;i++){
            //★テキスト
            OtaInsuranceShiki__c = document.getElementById(trs[i].id + "_td5" + "_5").getAttribute("value");
            OtaInsuranceShuki__c = document.getElementById(trs[i].id + "_td6" + "_6").getAttribute("value");
            blnShiki = false;
            blnShuki = false;
            //保険始期が「yyyy/mm/dd」形式でなかった場合,存在しない日付の場合はエラーとする
            if(OtaInsuranceShiki__c != ""){
                if(!ckDate(OtaInsuranceShiki__c)){
                    blnError = true;
                    blnError1 = true;
                    trs[i].style.cssText = "background-color: #ff0000;";
                }else{
                    trs[i].style.cssText = "background-color: transparent;";
                    blnShiki = true;
                }
            }else{
                trs[i].style.cssText = "background-color: transparent;";
                blnShiki = true;
            }
            //保険満期が「yyyy/mm/dd」形式でなかった場合,存在しない日付の場合はエラーとする
            if(OtaInsuranceShuki__c != ""){
                if(!ckDate(OtaInsuranceShuki__c)){
                    blnError = true;
                    blnError1 = true;
                    trs[i].style.cssText = "background-color: #ff0000;";
                }else{
                    blnShuki = true;
                }
            }
            if(blnShiki == true && blnShuki == true){
                OtaShiki = OtaInsuranceShiki__c.substr(0, 4) + OtaInsuranceShiki__c.substr(5, 2) + OtaInsuranceShiki__c.substr(8, 2);
                OtaShuki = OtaInsuranceShuki__c.substr(0, 4) + OtaInsuranceShuki__c.substr(5, 2) + OtaInsuranceShuki__c.substr(8, 2);
                if(OtaShiki >= OtaShuki){
                    blnError = true;
                    blnError2 = true;
                    trs[i].style.cssText = "background-color: #ff0000;";
                }
            }
        }
        if(blnError1){
            alert("YYYY/MM/DDの形式になっていない、または不正な日付が存在しています");
        }
        if(blnError2){
            alert("保険始期と保険満期の大小関係が不正なデータが存在しています");
        }
        return blnError;
    }
    function update(){
        try{
            //エラーが存在しなかった場合のみ更新
            if(!checkInput()){
                if (!window.confirm("更新してもよろしいですか？")){
                    return;
                }
                //変数定義
                var trs,tds,cells,sObject,ShokenNo__c,OtaInsuranceShiki__c,OtaInsuranceShuki__c;
                trs = document.getElementById("tbody1").getElementsByTagName("tr");
                var upObj = new Array();
                var count = 0;
                for(i=0;i<trs.length;i++){
                    //★更新値設定
                    if(trs[i].id.indexOf("family") >= 0){
                        sObject = new sforce.SObject("FamilyInfo__c");
                    }else{
                        sObject = new sforce.SObject("MemberInfo__c");
                    }
                    sObject.Id = document.getElementById(trs[i].id + "_td8" + "_8").getAttribute("value");
                    ShokenNo__c = document.getElementById(trs[i].id + "_td4" + "_4").getAttribute("value");
                    sObject.ShokenNo__c = (ShokenNo__c == "")?null:ShokenNo__c;
                    OtaInsuranceShiki__c = document.getElementById(trs[i].id + "_td5" + "_5").getAttribute("value");
                    sObject.OtaInsuranceShiki__c = (OtaInsuranceShiki__c == "")?null:OtaInsuranceShiki__c.replace(/\//g,"-");
                    OtaInsuranceShuki__c = document.getElementById(trs[i].id + "_td6" + "_6").getAttribute("value");
                    sObject.OtaInsuranceShuki__c = (OtaInsuranceShuki__c == "")?null:OtaInsuranceShuki__c.replace(/\//g,"-");

                    upObj.push(sObject);
                    count++;

                    if (count >= 200) {
                        result = sforce.connection.update(upObj);
                        for (var j = 0; j < result.length; j++) {
                            if (!result[j].getBoolean("success")) {
                                alert("failed to update " + result[j]);
                                return;
                            }
                        }
                        upObj = new Array();
                        count = 0;
                    }
                }
                if (count > 0) {
                    result = sforce.connection.update(upObj);
                    for (var j = 0; j < result.length; j++) {
                        if (!result[j].getBoolean("success")) {
                            alert("failed to update " + result[j]);
                            return;
                        }
                    }
                }
                alert("正常に終了しました");
                window.top.location.href = "/{!ContractInfo__c.Id}";
            }
        }catch(e){
            alert(e);
            return;
        }
    }
    function cansel(){
        //キャンセルボタンを押した場合に契約情報画面に戻る
        window.top.location.href = "/{!ContractInfo__c.Id}";
    }
    function maketd(tr,obj){
        //<td>列作成
        //★１列目：ラベル表示（会員番号）
        td = document.createElement("td");
        td.setAttribute("id",tr.id + "_td1");
        elem = document.createElement("span");
        elem.setAttribute("id",td.getAttribute("id") + "_1");
        elem.setAttribute("innerHTML",(obj.MemberNo__c==null)?"&nbsp":obj.MemberNo__c);
        td.appendChild(elem);
        tr.appendChild(td);

        //★２列目：ラベル表示（会員氏名）
        td = document.createElement("td");
        td.setAttribute("id",tr.id + "_td2");
        elem = document.createElement("span");
        elem.setAttribute("id",td.getAttribute("id") + "_2");
        elem.setAttribute("innerHTML",(obj.Name ==null)?"&nbsp":obj.Name);
        td.appendChild(elem);
        tr.appendChild(td);

        //★３列目：ラベル表示（保険会社）
        td = document.createElement("td");
        td.setAttribute("id",tr.id + "_td3");
        elem = document.createElement("span");
        elem.setAttribute("id",td.getAttribute("id") + "_3");
        elem.setAttribute("innerHTML",(obj.OtaName__c ==null)?"&nbsp":obj.OtaName__c);
        td.appendChild(elem);
        tr.appendChild(td);

        //★４列目：テキスト表示(証券番号）
        td = document.createElement("td");
        td.setAttribute("id",tr.id + "_td4");
        elem = document.createElement("input");
        elem.setAttribute("id",td.getAttribute("id") + "_4");
        elem.setAttribute("type","text");
//2008/08/11 moriyama mod Start
//        elem.setAttribute("maxLength",20);
        elem.setAttribute("maxLength",30);
//2008/08/11 moriyama mod End
        elem.setAttribute("value",(obj.ShokenNo__c == null)?"":obj.ShokenNo__c);
        td.appendChild(elem);
        tr.appendChild(td);

        //★５列目：テキスト表示（保険始期）
        td = document.createElement("td");
        td.setAttribute("id",tr.id + "_td5");
        elem = document.createElement("input");
        elem.setAttribute("id",td.getAttribute("id") + "_5");
        elem.setAttribute("type","text");
        elem.setAttribute("size",10);
        elem.setAttribute("maxLength",10);
        elem.setAttribute("value",(obj.OtaInsuranceShiki__c == null)?"":obj.OtaInsuranceShiki__c.replace(/-/g,"/"));
        td.appendChild(elem);
        tr.appendChild(td);

        //★６列目：テキスト表示（保険満期）
        td = document.createElement("td");
        td.setAttribute("id",tr.id + "_td6");
        elem = document.createElement("input");
        elem.setAttribute("id",td.getAttribute("id") + "_6");
        elem.setAttribute("type","text");
        elem.setAttribute("size",10);
        elem.setAttribute("maxLength",10);
        elem.setAttribute("value",(obj.OtaInsuranceShuki__c == null)?"":obj.OtaInsuranceShuki__c.replace(/-/g,"/"));
        td.appendChild(elem);
        tr.appendChild(td);

        //★７列目：ラベル表示(勤務先会社名）
        td = document.createElement("td");
        td.setAttribute("id",tr.id + " _td7");
        elem = document.createElement("span");
        elem.setAttribute("id",td.getAttribute("id") + "_7");
        elem.setAttribute("innerHTML",(obj.KinmuCompany__r == null)?"&nbsp;":obj.KinmuCompany__r.Name);	
        td.appendChild(elem);
        tr.appendChild(td);

        //★８列目：隠し表示
        td = document.createElement("td");
        td.setAttribute("id",tr.id + "_td8");
        td.style.cssText = "padding: 0px;display:none;";
        elem = document.createElement("input");
        elem.setAttribute("id",td.getAttribute("id") + "_8");
        elem.setAttribute("type","hidden");
        elem.setAttribute("value",obj.Id);
        td.appendChild(elem);
        tr.appendChild(td);
        return tr;
    }
    function ckDate(datestr){
        // 正規表現による書式チェック 
        if(!datestr.match(/^\d{4}\/\d{2}\/\d{2}$/)){ 
            return false; 
        }
        var vYear = datestr.substr(0, 4) - 0; 
        var vMonth = datestr.substr(5, 2) - 1; // Javascriptは、0-11で表現 
        var vDay = datestr.substr(8, 2) - 0; 
        // 月,日の妥当性チェック 
        if(vMonth >= 0 && vMonth <= 11 && vDay >= 1 && vDay <= 31){ 
            var vDt = new Date(vYear, vMonth, vDay); 
            if(isNaN(vDt)){
                return false; 
            }else if(vDt.getFullYear() == vYear && vDt.getMonth() == vMonth && vDt.getDate() == vDay){
                return true; 
            }else{
                return false; 
            }
        }else{
            return false; 
        }
    }
    </script>
    <body id = "body1" onload = "build()" style ="display:none;">
        <div class="bPageTitle">
            <div class="ptBody secondaryPalette">
                <table border="0">
                    <tr>
                        <td class="pageDescription">会社契約No　　{!ContractInfo__c.Name}</td>
                    </tr>
                    <tr>
                        <td class="pageDescription">契約会社名称　{!ContractInfo__c.KeiyakuCompanyName__c}</td>
                    </tr>
                </table>
            </div>
        </div>
        <table border="0">
            <tr>
                <td>
                    <input class="btn" id="btnUpdate" type="button" value=" 更新 " align="center" onclick="update();" disabled>&nbsp;&nbsp;
                    <input class="btn" id="" type="button" value="キャンセル" align="center" onclick="cansel();">
                </td>
            </tr>
        </table>
        <div class="bPageBlock secondaryPalette">
            <div class="pbBody">
                <div class="pbSubsection">
                    <table id = "table1" border="0" class="list" cellpadding="0" cellspacing="0">
                        <tbody id="tbody0">
                        <tr class="headerRow">
                            <th align="center">会員番号</th>
                            <th align="center">会員氏名</th>
                            <th align="center">保険会社</th>
                            <th align="center">証券番号</th>
                            <th align="center">保険始期</th>
                            <th align="center">保険満期</th>
                            <th align="center">勤務先会社名</th>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </body>
</html>